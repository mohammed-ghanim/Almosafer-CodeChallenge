<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LPMoGhanim" failures="0" tests="2" name="com.almosafer.testcases.WelcomePageTest" time="6.474" errors="1" timestamp="2024-08-05T19:59:52 EET" skipped="1">
  <testcase classname="com.almosafer.testcases.WelcomePageTest" name="beforeClass" time="6.474">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Cannot start the &#039;com.travel.almosafer&#039; application. Consider checking the driver&#039;s troubleshooting documentation. Original error: Cannot start the &#039;com.travel.almosafer&#039; application. Consider checking the driver&#039;s troubleshooting documentation. Original error: Activity name &#039;.com.travel.common.presentation.splash.SplashActivity&#039; used to start the app doesn&#039;t exist or cannot be launched! Make sure it exists and is a launchable activity 
Host info: host: &#039;LPMOGHANIM&#039;, ip: &#039;192.168.1.27&#039;
Build info: version: &#039;4.23.0&#039;, revision: &#039;4df0a231af&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.9&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: true, appActivity: com.travel.common.presentat..., appPackage: com.travel.almosafer, automationName: UiAutomator2, deviceName: 6b99e5e7, ignoreHiddenApiPolicyError: true, platformName: ANDROID, platformVersion: 12}, capabilities=[{appium:platformVersion=12, appium:appPackage=com.travel.almosafer, appium:ignoreHiddenApiPolicyError=true, appium:appActivity=com.travel.common.presentation.splash.SplashActivity, acceptInsecureCerts=true, appium:deviceName=6b99e5e7, appium:automationName=UiAutomator2, platformName=ANDROID}]}]
Capabilities {acceptInsecureCerts: true, appActivity: com.travel.common.presentat..., appPackage: com.travel.almosafer, automationName: UiAutomator2, deviceName: 6b99e5e7, ignoreHiddenApiPolicyError: true, platformName: ANDROID, platformVersion: 12}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Cannot start the 'com.travel.almosafer' application. Consider checking the driver's troubleshooting documentation. Original error: Cannot start the 'com.travel.almosafer' application. Consider checking the driver's troubleshooting documentation. Original error: Activity name '.com.travel.common.presentation.splash.SplashActivity' used to start the app doesn't exist or cannot be launched! Make sure it exists and is a launchable activity 
Host info: host: 'LPMOGHANIM', ip: '192.168.1.27'
Build info: version: '4.23.0', revision: '4df0a231af'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: true, appActivity: com.travel.common.presentat..., appPackage: com.travel.almosafer, automationName: UiAutomator2, deviceName: 6b99e5e7, ignoreHiddenApiPolicyError: true, platformName: ANDROID, platformVersion: 12}, capabilities=[{appium:platformVersion=12, appium:appPackage=com.travel.almosafer, appium:ignoreHiddenApiPolicyError=true, appium:appActivity=com.travel.common.presentation.splash.SplashActivity, acceptInsecureCerts=true, appium:deviceName=6b99e5e7, appium:automationName=UiAutomator2, platformName=ANDROID}]}]
Capabilities {acceptInsecureCerts: true, appActivity: com.travel.common.presentat..., appPackage: com.travel.almosafer, automationName: UiAutomator2, deviceName: 6b99e5e7, ignoreHiddenApiPolicyError: true, platformName: ANDROID, platformVersion: 12}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:527)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at com.almosafer.base.Base.beforeClass(Base.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- beforeClass -->
  <testcase classname="com.almosafer.testcases.WelcomePageTest" name="testCase1" time="0.000">
    <skipped/>
  </testcase> <!-- testCase1 -->
</testsuite> <!-- com.almosafer.testcases.WelcomePageTest -->
